name: verifier

on: [push]

jobs:
  verifier:
    runs-on: ubuntu-latest

    steps:
    - name: checkout code
      uses: actions/checkout@v3

    - name: show dependency
      run: |
          echo "gcc path: $(which gcc)"
          echo "gcc version: $(gcc --version)"

    - name: create dependency directory(obj, out)
      run: |
          mkdir ./obj 
          mkdir ./out 

    - name: build Router
      run:  ./sh/test.sh -b

    - name: run Router
      run:  ./sh/test.sh -r

    - name: verify output
      run: |
        out_dir="./out"
        not_pass_files=""
        not_run_files=""
        for testcase in $(ls -1 "$out_dir"/* | sort -V); do
            testname=$(basename "$testcase")
            testnum=$(echo "$testname" | sed 's/^test0*\([0-9]*\)\.txt$/\1/')
            if [ ! -e "$out_dir/$testname" ]; then
                not_run_files="$not_run_files$testnum, "
            elif (./verifier "$out_dir/$testname" | grep -q "Error"); then
                echo "Error found in ./$out_dir/$testname."
                echo "Please run the following code to check the log."
                echo "./verifier ./$out_dir/$testname"
                not_pass_files="$not_pass_files$testnum, "
            else
                echo "$out_dir/$testname Passed."
            fi
        done
        if [ -n "$not_run_files" ]; then
            echo "Not run at test{$not_run_files}"
        fi
        if [ -n "$not_pass_files" ]; then
            echo "Failed at test{$not_pass_files}"
            exit 1
        else
            echo "All pass!"
        fi

    - name: clean Router
      run: ./sh/test.sh -c
      
    - name: delete dependency directory(obj, out)
      run: |
          rm -rf ./obj 
          rm -rf ./out
    
  
